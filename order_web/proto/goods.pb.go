// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goods.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GoodsListResponse struct {
	Goods                []*GoodsInfoResponse `protobuf:"bytes,1,rep,name=goods,proto3" json:"goods,omitempty"`
	Total                int32                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GoodsListResponse) Reset()         { *m = GoodsListResponse{} }
func (m *GoodsListResponse) String() string { return proto.CompactTextString(m) }
func (*GoodsListResponse) ProtoMessage()    {}
func (*GoodsListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{0}
}

func (m *GoodsListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsListResponse.Unmarshal(m, b)
}
func (m *GoodsListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsListResponse.Marshal(b, m, deterministic)
}
func (m *GoodsListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsListResponse.Merge(m, src)
}
func (m *GoodsListResponse) XXX_Size() int {
	return xxx_messageInfo_GoodsListResponse.Size(m)
}
func (m *GoodsListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsListResponse proto.InternalMessageInfo

func (m *GoodsListResponse) GetGoods() []*GoodsInfoResponse {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *GoodsListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type BatchGoodsIdInfo struct {
	Id                   []int32  `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGoodsIdInfo) Reset()         { *m = BatchGoodsIdInfo{} }
func (m *BatchGoodsIdInfo) String() string { return proto.CompactTextString(m) }
func (*BatchGoodsIdInfo) ProtoMessage()    {}
func (*BatchGoodsIdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{1}
}

func (m *BatchGoodsIdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGoodsIdInfo.Unmarshal(m, b)
}
func (m *BatchGoodsIdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGoodsIdInfo.Marshal(b, m, deterministic)
}
func (m *BatchGoodsIdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGoodsIdInfo.Merge(m, src)
}
func (m *BatchGoodsIdInfo) XXX_Size() int {
	return xxx_messageInfo_BatchGoodsIdInfo.Size(m)
}
func (m *BatchGoodsIdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGoodsIdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGoodsIdInfo proto.InternalMessageInfo

func (m *BatchGoodsIdInfo) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type DeleteGoodsInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGoodsInfo) Reset()         { *m = DeleteGoodsInfo{} }
func (m *DeleteGoodsInfo) String() string { return proto.CompactTextString(m) }
func (*DeleteGoodsInfo) ProtoMessage()    {}
func (*DeleteGoodsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{2}
}

func (m *DeleteGoodsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGoodsInfo.Unmarshal(m, b)
}
func (m *DeleteGoodsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGoodsInfo.Marshal(b, m, deterministic)
}
func (m *DeleteGoodsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGoodsInfo.Merge(m, src)
}
func (m *DeleteGoodsInfo) XXX_Size() int {
	return xxx_messageInfo_DeleteGoodsInfo.Size(m)
}
func (m *DeleteGoodsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGoodsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGoodsInfo proto.InternalMessageInfo

func (m *DeleteGoodsInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GoodInfoRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodInfoRequest) Reset()         { *m = GoodInfoRequest{} }
func (m *GoodInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GoodInfoRequest) ProtoMessage()    {}
func (*GoodInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{3}
}

func (m *GoodInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodInfoRequest.Unmarshal(m, b)
}
func (m *GoodInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodInfoRequest.Marshal(b, m, deterministic)
}
func (m *GoodInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodInfoRequest.Merge(m, src)
}
func (m *GoodInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GoodInfoRequest.Size(m)
}
func (m *GoodInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GoodInfoRequest proto.InternalMessageInfo

func (m *GoodInfoRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CreateGoodsInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSn              string   `protobuf:"bytes,3,opt,name=goodsSn,proto3" json:"goodsSn,omitempty"`
	Stocks               int32    `protobuf:"varint,7,opt,name=stocks,proto3" json:"stocks,omitempty"`
	MarketPrice          float32  `protobuf:"fixed32,8,opt,name=marketPrice,proto3" json:"marketPrice,omitempty"`
	ShopPrice            float32  `protobuf:"fixed32,9,opt,name=shopPrice,proto3" json:"shopPrice,omitempty"`
	GoodsBrief           string   `protobuf:"bytes,10,opt,name=goodsBrief,proto3" json:"goodsBrief,omitempty"`
	GoodsDesc            string   `protobuf:"bytes,11,opt,name=goodsDesc,proto3" json:"goodsDesc,omitempty"`
	ShipFree             bool     `protobuf:"varint,12,opt,name=shipFree,proto3" json:"shipFree,omitempty"`
	Images               []string `protobuf:"bytes,13,rep,name=images,proto3" json:"images,omitempty"`
	DescImages           []string `protobuf:"bytes,14,rep,name=descImages,proto3" json:"descImages,omitempty"`
	GoodsFrontImage      string   `protobuf:"bytes,15,opt,name=goodsFrontImage,proto3" json:"goodsFrontImage,omitempty"`
	IsNew                bool     `protobuf:"varint,16,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot                bool     `protobuf:"varint,17,opt,name=isHot,proto3" json:"isHot,omitempty"`
	OnSale               bool     `protobuf:"varint,18,opt,name=onSale,proto3" json:"onSale,omitempty"`
	CategoryId           int32    `protobuf:"varint,19,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Brand                int32    `protobuf:"varint,20,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGoodsInfo) Reset()         { *m = CreateGoodsInfo{} }
func (m *CreateGoodsInfo) String() string { return proto.CompactTextString(m) }
func (*CreateGoodsInfo) ProtoMessage()    {}
func (*CreateGoodsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{4}
}

func (m *CreateGoodsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGoodsInfo.Unmarshal(m, b)
}
func (m *CreateGoodsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGoodsInfo.Marshal(b, m, deterministic)
}
func (m *CreateGoodsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGoodsInfo.Merge(m, src)
}
func (m *CreateGoodsInfo) XXX_Size() int {
	return xxx_messageInfo_CreateGoodsInfo.Size(m)
}
func (m *CreateGoodsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGoodsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGoodsInfo proto.InternalMessageInfo

func (m *CreateGoodsInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateGoodsInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateGoodsInfo) GetGoodsSn() string {
	if m != nil {
		return m.GoodsSn
	}
	return ""
}

func (m *CreateGoodsInfo) GetStocks() int32 {
	if m != nil {
		return m.Stocks
	}
	return 0
}

func (m *CreateGoodsInfo) GetMarketPrice() float32 {
	if m != nil {
		return m.MarketPrice
	}
	return 0
}

func (m *CreateGoodsInfo) GetShopPrice() float32 {
	if m != nil {
		return m.ShopPrice
	}
	return 0
}

func (m *CreateGoodsInfo) GetGoodsBrief() string {
	if m != nil {
		return m.GoodsBrief
	}
	return ""
}

func (m *CreateGoodsInfo) GetGoodsDesc() string {
	if m != nil {
		return m.GoodsDesc
	}
	return ""
}

func (m *CreateGoodsInfo) GetShipFree() bool {
	if m != nil {
		return m.ShipFree
	}
	return false
}

func (m *CreateGoodsInfo) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *CreateGoodsInfo) GetDescImages() []string {
	if m != nil {
		return m.DescImages
	}
	return nil
}

func (m *CreateGoodsInfo) GetGoodsFrontImage() string {
	if m != nil {
		return m.GoodsFrontImage
	}
	return ""
}

func (m *CreateGoodsInfo) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *CreateGoodsInfo) GetIsHot() bool {
	if m != nil {
		return m.IsHot
	}
	return false
}

func (m *CreateGoodsInfo) GetOnSale() bool {
	if m != nil {
		return m.OnSale
	}
	return false
}

func (m *CreateGoodsInfo) GetCategoryId() int32 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *CreateGoodsInfo) GetBrand() int32 {
	if m != nil {
		return m.Brand
	}
	return 0
}

type GoodsInfoResponse struct {
	Id                   int32                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId           int32                      `protobuf:"varint,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Name                 string                     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSn              string                     `protobuf:"bytes,4,opt,name=goodsSn,proto3" json:"goodsSn,omitempty"`
	ClickNum             int32                      `protobuf:"varint,5,opt,name=clickNum,proto3" json:"clickNum,omitempty"`
	SoldNum              int32                      `protobuf:"varint,6,opt,name=soldNum,proto3" json:"soldNum,omitempty"`
	FavNum               int32                      `protobuf:"varint,7,opt,name=favNum,proto3" json:"favNum,omitempty"`
	MarketPrice          float32                    `protobuf:"fixed32,9,opt,name=marketPrice,proto3" json:"marketPrice,omitempty"`
	ShopPrice            float32                    `protobuf:"fixed32,10,opt,name=shopPrice,proto3" json:"shopPrice,omitempty"`
	GoodsBrief           string                     `protobuf:"bytes,11,opt,name=goodsBrief,proto3" json:"goodsBrief,omitempty"`
	GoodsDesc            string                     `protobuf:"bytes,12,opt,name=goodsDesc,proto3" json:"goodsDesc,omitempty"`
	ShipFree             bool                       `protobuf:"varint,13,opt,name=shipFree,proto3" json:"shipFree,omitempty"`
	Images               []string                   `protobuf:"bytes,14,rep,name=images,proto3" json:"images,omitempty"`
	DescImages           []string                   `protobuf:"bytes,15,rep,name=descImages,proto3" json:"descImages,omitempty"`
	GoodsFrontImage      string                     `protobuf:"bytes,16,opt,name=goodsFrontImage,proto3" json:"goodsFrontImage,omitempty"`
	IsNew                bool                       `protobuf:"varint,17,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot                bool                       `protobuf:"varint,18,opt,name=isHot,proto3" json:"isHot,omitempty"`
	OnSale               bool                       `protobuf:"varint,19,opt,name=onSale,proto3" json:"onSale,omitempty"`
	AddTime              int64                      `protobuf:"varint,20,opt,name=addTime,proto3" json:"addTime,omitempty"`
	Category             *CategoryBriefInfoResponse `protobuf:"bytes,21,opt,name=category,proto3" json:"category,omitempty"`
	Brand                *BrandInfoResponse         `protobuf:"bytes,22,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GoodsInfoResponse) Reset()         { *m = GoodsInfoResponse{} }
func (m *GoodsInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GoodsInfoResponse) ProtoMessage()    {}
func (*GoodsInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{5}
}

func (m *GoodsInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsInfoResponse.Unmarshal(m, b)
}
func (m *GoodsInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsInfoResponse.Marshal(b, m, deterministic)
}
func (m *GoodsInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsInfoResponse.Merge(m, src)
}
func (m *GoodsInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GoodsInfoResponse.Size(m)
}
func (m *GoodsInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsInfoResponse proto.InternalMessageInfo

func (m *GoodsInfoResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsInfoResponse) GetCategoryId() int32 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *GoodsInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GoodsInfoResponse) GetGoodsSn() string {
	if m != nil {
		return m.GoodsSn
	}
	return ""
}

func (m *GoodsInfoResponse) GetClickNum() int32 {
	if m != nil {
		return m.ClickNum
	}
	return 0
}

func (m *GoodsInfoResponse) GetSoldNum() int32 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

func (m *GoodsInfoResponse) GetFavNum() int32 {
	if m != nil {
		return m.FavNum
	}
	return 0
}

func (m *GoodsInfoResponse) GetMarketPrice() float32 {
	if m != nil {
		return m.MarketPrice
	}
	return 0
}

func (m *GoodsInfoResponse) GetShopPrice() float32 {
	if m != nil {
		return m.ShopPrice
	}
	return 0
}

func (m *GoodsInfoResponse) GetGoodsBrief() string {
	if m != nil {
		return m.GoodsBrief
	}
	return ""
}

func (m *GoodsInfoResponse) GetGoodsDesc() string {
	if m != nil {
		return m.GoodsDesc
	}
	return ""
}

func (m *GoodsInfoResponse) GetShipFree() bool {
	if m != nil {
		return m.ShipFree
	}
	return false
}

func (m *GoodsInfoResponse) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *GoodsInfoResponse) GetDescImages() []string {
	if m != nil {
		return m.DescImages
	}
	return nil
}

func (m *GoodsInfoResponse) GetGoodsFrontImage() string {
	if m != nil {
		return m.GoodsFrontImage
	}
	return ""
}

func (m *GoodsInfoResponse) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *GoodsInfoResponse) GetIsHot() bool {
	if m != nil {
		return m.IsHot
	}
	return false
}

func (m *GoodsInfoResponse) GetOnSale() bool {
	if m != nil {
		return m.OnSale
	}
	return false
}

func (m *GoodsInfoResponse) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *GoodsInfoResponse) GetCategory() *CategoryBriefInfoResponse {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *GoodsInfoResponse) GetBrand() *BrandInfoResponse {
	if m != nil {
		return m.Brand
	}
	return nil
}

type CategoryBriefInfoResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CategoryBriefInfoResponse) Reset()         { *m = CategoryBriefInfoResponse{} }
func (m *CategoryBriefInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CategoryBriefInfoResponse) ProtoMessage()    {}
func (*CategoryBriefInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{6}
}

func (m *CategoryBriefInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryBriefInfoResponse.Unmarshal(m, b)
}
func (m *CategoryBriefInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryBriefInfoResponse.Marshal(b, m, deterministic)
}
func (m *CategoryBriefInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryBriefInfoResponse.Merge(m, src)
}
func (m *CategoryBriefInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CategoryBriefInfoResponse.Size(m)
}
func (m *CategoryBriefInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryBriefInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryBriefInfoResponse proto.InternalMessageInfo

func (m *CategoryBriefInfoResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CategoryBriefInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BrandInfoResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrandInfoResponse) Reset()         { *m = BrandInfoResponse{} }
func (m *BrandInfoResponse) String() string { return proto.CompactTextString(m) }
func (*BrandInfoResponse) ProtoMessage()    {}
func (*BrandInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{7}
}

func (m *BrandInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrandInfoResponse.Unmarshal(m, b)
}
func (m *BrandInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrandInfoResponse.Marshal(b, m, deterministic)
}
func (m *BrandInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrandInfoResponse.Merge(m, src)
}
func (m *BrandInfoResponse) XXX_Size() int {
	return xxx_messageInfo_BrandInfoResponse.Size(m)
}
func (m *BrandInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BrandInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BrandInfoResponse proto.InternalMessageInfo

func (m *BrandInfoResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BrandInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GoodsFilterRequest struct {
	PriceMin             int32    `protobuf:"varint,1,opt,name=priceMin,proto3" json:"priceMin,omitempty"`
	PriceMax             int32    `protobuf:"varint,2,opt,name=priceMax,proto3" json:"priceMax,omitempty"`
	IsHot                bool     `protobuf:"varint,3,opt,name=isHot,proto3" json:"isHot,omitempty"`
	IsNew                bool     `protobuf:"varint,4,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsTab                bool     `protobuf:"varint,5,opt,name=isTab,proto3" json:"isTab,omitempty"`
	TopCategroy          int32    `protobuf:"varint,6,opt,name=topCategroy,proto3" json:"topCategroy,omitempty"`
	Pages                int32    `protobuf:"varint,7,opt,name=pages,proto3" json:"pages,omitempty"`
	PagePerNums          int32    `protobuf:"varint,8,opt,name=pagePerNums,proto3" json:"pagePerNums,omitempty"`
	KeyWords             string   `protobuf:"bytes,9,opt,name=keyWords,proto3" json:"keyWords,omitempty"`
	Brand                int32    `protobuf:"varint,10,opt,name=brand,proto3" json:"brand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsFilterRequest) Reset()         { *m = GoodsFilterRequest{} }
func (m *GoodsFilterRequest) String() string { return proto.CompactTextString(m) }
func (*GoodsFilterRequest) ProtoMessage()    {}
func (*GoodsFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{8}
}

func (m *GoodsFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsFilterRequest.Unmarshal(m, b)
}
func (m *GoodsFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsFilterRequest.Marshal(b, m, deterministic)
}
func (m *GoodsFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsFilterRequest.Merge(m, src)
}
func (m *GoodsFilterRequest) XXX_Size() int {
	return xxx_messageInfo_GoodsFilterRequest.Size(m)
}
func (m *GoodsFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsFilterRequest proto.InternalMessageInfo

func (m *GoodsFilterRequest) GetPriceMin() int32 {
	if m != nil {
		return m.PriceMin
	}
	return 0
}

func (m *GoodsFilterRequest) GetPriceMax() int32 {
	if m != nil {
		return m.PriceMax
	}
	return 0
}

func (m *GoodsFilterRequest) GetIsHot() bool {
	if m != nil {
		return m.IsHot
	}
	return false
}

func (m *GoodsFilterRequest) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *GoodsFilterRequest) GetIsTab() bool {
	if m != nil {
		return m.IsTab
	}
	return false
}

func (m *GoodsFilterRequest) GetTopCategroy() int32 {
	if m != nil {
		return m.TopCategroy
	}
	return 0
}

func (m *GoodsFilterRequest) GetPages() int32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *GoodsFilterRequest) GetPagePerNums() int32 {
	if m != nil {
		return m.PagePerNums
	}
	return 0
}

func (m *GoodsFilterRequest) GetKeyWords() string {
	if m != nil {
		return m.KeyWords
	}
	return ""
}

func (m *GoodsFilterRequest) GetBrand() int32 {
	if m != nil {
		return m.Brand
	}
	return 0
}

func init() {
	proto.RegisterType((*GoodsListResponse)(nil), "GoodsListResponse")
	proto.RegisterType((*BatchGoodsIdInfo)(nil), "BatchGoodsIdInfo")
	proto.RegisterType((*DeleteGoodsInfo)(nil), "DeleteGoodsInfo")
	proto.RegisterType((*GoodInfoRequest)(nil), "GoodInfoRequest")
	proto.RegisterType((*CreateGoodsInfo)(nil), "CreateGoodsInfo")
	proto.RegisterType((*GoodsInfoResponse)(nil), "GoodsInfoResponse")
	proto.RegisterType((*CategoryBriefInfoResponse)(nil), "CategoryBriefInfoResponse")
	proto.RegisterType((*BrandInfoResponse)(nil), "BrandInfoResponse")
	proto.RegisterType((*GoodsFilterRequest)(nil), "GoodsFilterRequest")
}

func init() {
	proto.RegisterFile("goods.proto", fileDescriptor_a30593c5487368b0)
}

var fileDescriptor_a30593c5487368b0 = []byte{
	// 790 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x4b, 0x6f, 0xdb, 0x38,
	0x10, 0x86, 0x5f, 0xb1, 0x35, 0x4a, 0xfc, 0x60, 0xb2, 0x01, 0x57, 0xbb, 0x58, 0x78, 0x7d, 0xd2,
	0x49, 0x01, 0x92, 0x45, 0x72, 0xd8, 0xc3, 0x02, 0x4e, 0x36, 0x4d, 0x80, 0x36, 0x08, 0x94, 0x14,
	0x05, 0x7a, 0x93, 0x25, 0xda, 0x11, 0x2c, 0x8b, 0xaa, 0x48, 0xb7, 0xf5, 0x5f, 0xe9, 0xef, 0xea,
	0xb5, 0xbf, 0xa4, 0x97, 0x82, 0x43, 0x49, 0x96, 0x1f, 0x71, 0x72, 0xb2, 0xbf, 0x6f, 0x5e, 0xe4,
	0xf0, 0xd3, 0x0c, 0x98, 0x13, 0xce, 0x03, 0xe1, 0x24, 0x29, 0x97, 0xdc, 0xfa, 0x63, 0xc2, 0xf9,
	0x24, 0x62, 0x27, 0x88, 0x46, 0xf3, 0xf1, 0x09, 0x9b, 0x25, 0x72, 0xa1, 0x8d, 0x83, 0x07, 0xe8,
	0xbd, 0x51, 0xbe, 0x6f, 0x43, 0x21, 0x5d, 0x26, 0x12, 0x1e, 0x0b, 0x46, 0x6c, 0x68, 0x60, 0x02,
	0x5a, 0xe9, 0xd7, 0x6c, 0xf3, 0x94, 0x38, 0xe8, 0x72, 0x1b, 0x8f, 0x79, 0xee, 0xe2, 0x6a, 0x07,
	0x72, 0x04, 0x0d, 0xc9, 0xa5, 0x17, 0xd1, 0x6a, 0xbf, 0x62, 0x37, 0x5c, 0x0d, 0x06, 0x03, 0xe8,
	0x0e, 0x3d, 0xe9, 0x3f, 0xe9, 0xb0, 0x40, 0x05, 0x92, 0x36, 0x54, 0xc3, 0x00, 0x13, 0x36, 0xdc,
	0x6a, 0x18, 0x0c, 0xfe, 0x86, 0xce, 0x15, 0x8b, 0x98, 0x64, 0x45, 0xee, 0xc2, 0xa5, 0xb2, 0x74,
	0x51, 0x46, 0x5d, 0xf7, 0xd3, 0x9c, 0x09, 0xb9, 0xe1, 0xf2, 0xa3, 0x06, 0x9d, 0xcb, 0x94, 0x79,
	0x3b, 0xd2, 0x10, 0x02, 0xf5, 0xd8, 0x9b, 0x31, 0x3c, 0xa2, 0xe1, 0xe2, 0x7f, 0x42, 0xa1, 0x89,
	0x17, 0x78, 0x88, 0x69, 0x0d, 0xe9, 0x1c, 0x92, 0x63, 0xd8, 0x13, 0x92, 0xfb, 0x53, 0x41, 0x9b,
	0x98, 0x21, 0x43, 0xa4, 0x0f, 0xe6, 0xcc, 0x4b, 0xa7, 0x4c, 0xde, 0xa7, 0xa1, 0xcf, 0x68, 0xab,
	0x5f, 0xb1, 0xab, 0x6e, 0x99, 0x22, 0x7f, 0x82, 0x21, 0x9e, 0x78, 0xa2, 0xed, 0x06, 0xda, 0x97,
	0x04, 0xf9, 0x0b, 0x00, 0x4b, 0x0c, 0xd3, 0x90, 0x8d, 0x29, 0x60, 0xd1, 0x12, 0xa3, 0xa2, 0x11,
	0x5d, 0x31, 0xe1, 0x53, 0x13, 0xcd, 0x4b, 0x82, 0x58, 0xd0, 0x12, 0x4f, 0x61, 0x72, 0x9d, 0x32,
	0x46, 0xf7, 0xfb, 0x15, 0xbb, 0xe5, 0x16, 0x58, 0x9d, 0x38, 0x9c, 0x79, 0x13, 0x26, 0xe8, 0x41,
	0xbf, 0x66, 0x1b, 0x6e, 0x86, 0x54, 0xc5, 0x80, 0x09, 0xff, 0x56, 0xdb, 0xda, 0x68, 0x2b, 0x31,
	0xc4, 0x86, 0x0e, 0x16, 0xb8, 0x4e, 0x79, 0x2c, 0x91, 0xa3, 0x1d, 0xac, 0xbb, 0x4e, 0xab, 0x57,
	0x0e, 0xc5, 0x1d, 0xfb, 0x42, 0xbb, 0x58, 0x5a, 0x03, 0xcd, 0xde, 0x70, 0x49, 0x7b, 0x39, 0x7b,
	0xc3, 0xa5, 0x3a, 0x0d, 0x8f, 0x1f, 0xbc, 0x88, 0x51, 0x82, 0x74, 0x86, 0xd4, 0x69, 0x7c, 0x4f,
	0xb2, 0x09, 0x4f, 0x17, 0xb7, 0x01, 0x3d, 0xc4, 0xde, 0x96, 0x18, 0x95, 0x6d, 0x94, 0x7a, 0x71,
	0x40, 0x8f, 0xb4, 0x92, 0x10, 0x0c, 0x7e, 0xd6, 0x33, 0x7d, 0x96, 0xc5, 0xb7, 0xf1, 0xc2, 0xab,
	0xb9, 0xab, 0x1b, 0xb9, 0x73, 0x05, 0xd4, 0xb6, 0x2b, 0xa0, 0xbe, 0xaa, 0x00, 0x0b, 0x5a, 0x7e,
	0x14, 0xfa, 0xd3, 0xbb, 0xf9, 0x8c, 0x36, 0x30, 0x57, 0x81, 0x55, 0x94, 0xe0, 0x51, 0xa0, 0x4c,
	0x7b, 0x68, 0xca, 0xa1, 0xba, 0xf7, 0xd8, 0xfb, 0xac, 0x0c, 0x99, 0x6e, 0x34, 0x5a, 0xd7, 0x8d,
	0xf1, 0x82, 0x6e, 0x60, 0xb7, 0x6e, 0xcc, 0xdd, 0xba, 0xd9, 0xdf, 0xa5, 0x9b, 0x83, 0x67, 0x75,
	0xd3, 0xde, 0xa1, 0x9b, 0xce, 0x6b, 0x74, 0xd3, 0x7d, 0x41, 0x37, 0xbd, 0xad, 0xba, 0x21, 0xdb,
	0x75, 0x73, 0xb8, 0xa2, 0x1b, 0x0a, 0x4d, 0x2f, 0x08, 0x1e, 0xc3, 0x19, 0x43, 0x65, 0xd4, 0xdc,
	0x1c, 0x92, 0x73, 0x68, 0xe5, 0x6f, 0x4c, 0x7f, 0xeb, 0x57, 0x6c, 0xf3, 0xd4, 0x72, 0x2e, 0x33,
	0x02, 0x7b, 0xb3, 0x32, 0xb0, 0x0a, 0x5f, 0x35, 0xdd, 0xb4, 0xd2, 0x8e, 0x31, 0x88, 0x38, 0x43,
	0x85, 0x56, 0xa7, 0x9b, 0x56, 0xdf, 0x7f, 0xf0, 0xfb, 0xb3, 0x09, 0x5f, 0x33, 0x66, 0x06, 0x17,
	0xd0, 0xdb, 0x48, 0xfe, 0xaa, 0xc0, 0x6f, 0x55, 0x20, 0xa8, 0xfb, 0xeb, 0x30, 0x92, 0x2c, 0xcd,
	0xc7, 0x9f, 0x05, 0xad, 0x44, 0xa9, 0xe2, 0x5d, 0x18, 0x67, 0x09, 0x0a, 0xbc, 0xb4, 0x79, 0x5f,
	0xb3, 0x4f, 0xa0, 0xc0, 0xcb, 0x96, 0xd7, 0xca, 0x2d, 0x2f, 0x9e, 0xa7, 0xbe, 0xf1, 0x3c, 0x8f,
	0xde, 0x08, 0xb5, 0x8f, 0xec, 0xa3, 0x37, 0x52, 0x32, 0x96, 0x3c, 0xc1, 0x6e, 0xa4, 0x7c, 0x91,
	0x89, 0xbf, 0x4c, 0xa9, 0xb8, 0x04, 0x15, 0xa3, 0xf5, 0xaf, 0x81, 0x8a, 0x53, 0x7f, 0xee, 0x59,
	0x7a, 0x37, 0x9f, 0x09, 0x1c, 0x9b, 0x0d, 0xb7, 0x4c, 0xa9, 0x73, 0x4f, 0xd9, 0xe2, 0x03, 0x4f,
	0x03, 0x81, 0x5f, 0x87, 0xe1, 0x16, 0x78, 0x39, 0x14, 0xa0, 0x34, 0x14, 0x4e, 0xbf, 0x57, 0xa1,
	0x81, 0xcd, 0x21, 0xff, 0x80, 0x51, 0x6c, 0x2f, 0x72, 0xe8, 0x6c, 0x76, 0xcc, 0xca, 0x76, 0xd7,
	0xca, 0x7a, 0x3b, 0x87, 0x03, 0xbd, 0x9e, 0x98, 0xd4, 0x69, 0x7a, 0xce, 0xfa, 0xba, 0xda, 0x1a,
	0x77, 0x06, 0x66, 0x69, 0xd7, 0x90, 0xae, 0xb3, 0xb6, 0x79, 0xac, 0x2d, 0x8b, 0x92, 0x5c, 0x80,
	0x59, 0xda, 0x73, 0xa4, 0xeb, 0xac, 0x6d, 0x3d, 0xeb, 0xd8, 0xd1, 0xfb, 0xd9, 0xc9, 0xf7, 0xb3,
	0xf3, 0xbf, 0xda, 0xcf, 0x2a, 0xf0, 0x7d, 0x12, 0xec, 0xa8, 0xf6, 0x5c, 0xe0, 0x39, 0xb4, 0xf3,
	0x9b, 0x5d, 0x31, 0xe9, 0x85, 0x11, 0xe9, 0x3a, 0x6b, 0x7b, 0x74, 0xdb, 0x49, 0x87, 0xc6, 0xc7,
	0xa6, 0xf3, 0xaf, 0xce, 0xb5, 0x87, 0x3f, 0x67, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x00,
	0x68, 0x34, 0x48, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoodsClient is the client API for Goods service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoodsClient interface {
	//商品接口
	GoodsList(ctx context.Context, in *GoodsFilterRequest, opts ...grpc.CallOption) (*GoodsListResponse, error)
	BatchGetGoods(ctx context.Context, in *BatchGoodsIdInfo, opts ...grpc.CallOption) (*GoodsListResponse, error)
	CreateGoods(ctx context.Context, in *CreateGoodsInfo, opts ...grpc.CallOption) (*GoodsInfoResponse, error)
	DeleteGoods(ctx context.Context, in *DeleteGoodsInfo, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateGoods(ctx context.Context, in *CreateGoodsInfo, opts ...grpc.CallOption) (*empty.Empty, error)
	GetGoodsDetail(ctx context.Context, in *GoodInfoRequest, opts ...grpc.CallOption) (*GoodsInfoResponse, error)
}

type goodsClient struct {
	cc grpc.ClientConnInterface
}

func NewGoodsClient(cc grpc.ClientConnInterface) GoodsClient {
	return &goodsClient{cc}
}

func (c *goodsClient) GoodsList(ctx context.Context, in *GoodsFilterRequest, opts ...grpc.CallOption) (*GoodsListResponse, error) {
	out := new(GoodsListResponse)
	err := c.cc.Invoke(ctx, "/Goods/GoodsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) BatchGetGoods(ctx context.Context, in *BatchGoodsIdInfo, opts ...grpc.CallOption) (*GoodsListResponse, error) {
	out := new(GoodsListResponse)
	err := c.cc.Invoke(ctx, "/Goods/BatchGetGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) CreateGoods(ctx context.Context, in *CreateGoodsInfo, opts ...grpc.CallOption) (*GoodsInfoResponse, error) {
	out := new(GoodsInfoResponse)
	err := c.cc.Invoke(ctx, "/Goods/CreateGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) DeleteGoods(ctx context.Context, in *DeleteGoodsInfo, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Goods/DeleteGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) UpdateGoods(ctx context.Context, in *CreateGoodsInfo, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Goods/UpdateGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) GetGoodsDetail(ctx context.Context, in *GoodInfoRequest, opts ...grpc.CallOption) (*GoodsInfoResponse, error) {
	out := new(GoodsInfoResponse)
	err := c.cc.Invoke(ctx, "/Goods/GetGoodsDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodsServer is the server API for Goods service.
type GoodsServer interface {
	//商品接口
	GoodsList(context.Context, *GoodsFilterRequest) (*GoodsListResponse, error)
	BatchGetGoods(context.Context, *BatchGoodsIdInfo) (*GoodsListResponse, error)
	CreateGoods(context.Context, *CreateGoodsInfo) (*GoodsInfoResponse, error)
	DeleteGoods(context.Context, *DeleteGoodsInfo) (*empty.Empty, error)
	UpdateGoods(context.Context, *CreateGoodsInfo) (*empty.Empty, error)
	GetGoodsDetail(context.Context, *GoodInfoRequest) (*GoodsInfoResponse, error)
}

// UnimplementedGoodsServer can be embedded to have forward compatible implementations.
type UnimplementedGoodsServer struct {
}

func (*UnimplementedGoodsServer) GoodsList(ctx context.Context, req *GoodsFilterRequest) (*GoodsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GoodsList not implemented")
}
func (*UnimplementedGoodsServer) BatchGetGoods(ctx context.Context, req *BatchGoodsIdInfo) (*GoodsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGetGoods not implemented")
}
func (*UnimplementedGoodsServer) CreateGoods(ctx context.Context, req *CreateGoodsInfo) (*GoodsInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGoods not implemented")
}
func (*UnimplementedGoodsServer) DeleteGoods(ctx context.Context, req *DeleteGoodsInfo) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGoods not implemented")
}
func (*UnimplementedGoodsServer) UpdateGoods(ctx context.Context, req *CreateGoodsInfo) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGoods not implemented")
}
func (*UnimplementedGoodsServer) GetGoodsDetail(ctx context.Context, req *GoodInfoRequest) (*GoodsInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGoodsDetail not implemented")
}

func RegisterGoodsServer(s *grpc.Server, srv GoodsServer) {
	s.RegisterService(&_Goods_serviceDesc, srv)
}

func _Goods_GoodsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoodsFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).GoodsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/GoodsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).GoodsList(ctx, req.(*GoodsFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_BatchGetGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGoodsIdInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).BatchGetGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/BatchGetGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).BatchGetGoods(ctx, req.(*BatchGoodsIdInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_CreateGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGoodsInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).CreateGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/CreateGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).CreateGoods(ctx, req.(*CreateGoodsInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_DeleteGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGoodsInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).DeleteGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/DeleteGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).DeleteGoods(ctx, req.(*DeleteGoodsInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_UpdateGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGoodsInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).UpdateGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/UpdateGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).UpdateGoods(ctx, req.(*CreateGoodsInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_GetGoodsDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoodInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).GetGoodsDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/GetGoodsDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).GetGoodsDetail(ctx, req.(*GoodInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Goods_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Goods",
	HandlerType: (*GoodsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GoodsList",
			Handler:    _Goods_GoodsList_Handler,
		},
		{
			MethodName: "BatchGetGoods",
			Handler:    _Goods_BatchGetGoods_Handler,
		},
		{
			MethodName: "CreateGoods",
			Handler:    _Goods_CreateGoods_Handler,
		},
		{
			MethodName: "DeleteGoods",
			Handler:    _Goods_DeleteGoods_Handler,
		},
		{
			MethodName: "UpdateGoods",
			Handler:    _Goods_UpdateGoods_Handler,
		},
		{
			MethodName: "GetGoodsDetail",
			Handler:    _Goods_GetGoodsDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goods.proto",
}
